---
- hosts: update
  gather_facts: no
  vars_files:
  - vault/passwords
  - vault/msg_groups.yml
  vars:
    mail_body_file: "/tmp/ansible-mailing-tmtghujm" 
  order: sorted
  tasks:

    - name: Import update_reboot_task
      include: update_reboot_task.yml

    - name: Get timestamp from the system
      shell: "date"
      delegate_to: localhost
      run_once: true
      register: tstamp
      become: false

    - name: Check if there is {{mail_body_file}}
      file:
        state: absent
        path: "{{mail_body_file}}"
      delegate_to: localhost
      run_once: true
      become: false

    - name: Create {{mail_body_file}}
      file:
        state: touch
        path: "{{mail_body_file}}"
      delegate_to: localhost
      run_once: true
      become: false

    - name: Use j2 template to create body part
      template:
        src: templates/body.j2
        dest: /tmp/{{inventory_hostname}}.body.html
      delegate_to: localhost     
      become: false

    - name: add the individual runs
      shell: "cat /tmp/{{inventory_hostname}}.body.html  >> {{mail_body_file}}"
      delegate_to: localhost
      become: false

    - name: get the mail body to variable
      register: mail_body
      command: "cat {{mail_body_file}}"
      delegate_to: localhost
      run_once: True
      become: false

    - name: Sending an e-mail using gmail with app key
      community.general.mail:
        host: "{{ gmail.host }}"
        port: "{{ gmail.port }}"
        username: "{{ gmail.username  | default(omit) }}"
        password: "{{ gmail.password  | default(omit) }}"
        subtype: html
        to: "{{ updateAll.to }}"
        from: "{{ updateAll.from }}"
        subject: Ansible-report for {{tstamp.stdout}}
        body: "{{mail_body.stdout}}"
        secure: "{{ gmail.secure }}"
      delegate_to: localhost
      run_once: True
      register: emailresult
      until: emailresult is not failed
      retries: 3
      delay: 20
      become: false
