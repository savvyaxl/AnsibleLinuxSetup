---
- hosts: update
  gather_facts: no
  vars_files:
  - vault/passwords
  vars:
    mail_body_file: "/tmp/ansible-mailing-tmtghujm" 
  tasks:
    - name: Update all installed packages using YUM module
      yum:
        name: '*'
        state: latest
        update_cache: yes
        update_only: yes
      register: yum_updates

    - name: check to see if we need a reboot
      command: needs-restarting -r
      register: result
      ignore_errors: yes

    - debug:
        var: yum_updates

    - debug:
        var: result.stdout_lines

    - name: Reboot Server if Necessary
      shell: sleep 5 && reboot
      async: 1
      poll: 0
      timeout: 10
      when: result.rc == 1 and inventory_hostname != "ansible"
      ignore_errors: yes

    - name: Pausing to allow server to shutdown and terminate our SSH connection
      pause: seconds=200
      when: result.rc == 1 and inventory_hostname != "ansible"
#
    - name: Verify reboot
      command: uptime
      register: uptime

    - debug:
        var: uptime.stdout_lines

    - name: Get timestamp from the system
      shell: "date"
      delegate_to: localhost
      run_once: true
      register: tstamp
      become: false

    - name: Check if there is {{mail_body_file}}
      file:
        state: absent
        path: "{{mail_body_file}}"
      delegate_to: localhost
      run_once: true
      become: false

    - name: Create {{mail_body_file}}
      file:
        state: touch
        path: "{{mail_body_file}}"
      delegate_to: localhost
      run_once: true
      become: false

    # Use shell because lineinfile has race condition
    # with echo >> we put race condition problem on filesystem
    #- name: add line about change on host
    #  shell: "echo {{inventory_hostname}}:{{uptime.stdout}}{{ yum_updates.results }}{{result.stdout_lines}}  >> {{mail_body_file}}"
    #  delegate_to: localhost
    #  #when: my_test.changed
    #  become: false

    - name: Use j2 template to create body part
      template:
        src: templates/body.j2
        dest: /tmp/{{inventory_hostname}}.body.html
      delegate_to: localhost     
      become: false

    - name: add the individual runs
      shell: "cat /tmp/{{inventory_hostname}}.body.html  >> {{mail_body_file}}"
      delegate_to: localhost
      become: false

    - name: get the mail body to variable
      register: mail_body
      command: "cat {{mail_body_file}}"
      delegate_to: localhost
      run_once: True

    - name: Sending an e-mail using gmail with app key
      community.general.mail:
        host: smtp.gmail.com
        port: 465
        username: "{{ gmail.username }}"
        password: "{{ gmail.password }}"
        to: savvyaxl@yahoo.com
        from: savvyaxl@gmail.com
        subject: Ansible-report for {{tstamp.stdout}}
        body: "{{mail_body.stdout}}"
        secure: always
      delegate_to: localhost
      run_once: True

